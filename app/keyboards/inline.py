from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from app.database.db import list_directions, list_pzu_in_direction


def create_kb_for_contacts():
    "–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é /contacts"
    author_id = 897813157
    author_button = InlineKeyboardButton(
        text="–ê–≤—Ç–æ—Ä —ç—Ç–æ–≥–æ –±–æ—Ç–∞", url=f"tg://user?id={author_id}"
    )

    lomportbotchat_button = InlineKeyboardButton(
        text="–û–±—â–∏–π —á–∞—Ç –±–æ—Ç–∞", url="https://t.me/lomportbotchat"
    )
    contacts_keyboard = InlineKeyboardMarkup(
        inline_keyboard=[[lomportbotchat_button], [author_button]]
    )
    return contacts_keyboard


def create_kb_for_help():
    lomport_url_button = InlineKeyboardButton(
        text="–ë—É–¥–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–µ—Ç–∏—Ç–µ –º–æ–π —Å–∞–π—Ç üöõ", url="https://lomovoz-portal.ru"
    )

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    help_keyboard = InlineKeyboardMarkup(inline_keyboard=[[lomport_url_button]])
    return help_keyboard


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ö–µ–Ω–¥–ª–µ—Ä–∞ /list_pzu
async def create_kb_for_list_pzu() -> InlineKeyboardMarkup:
    request_result = await list_directions()
    request_result.sort()

    buttons = [
        InlineKeyboardButton(text=direction, callback_data=direction)
        for direction in request_result
    ]
    directions_keyboard = InlineKeyboardBuilder()
    directions_keyboard.row(*buttons, width=2)
    return directions_keyboard.as_markup()


# –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–∑—É –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
async def create_kb_for_direction(direction: str) -> InlineKeyboardMarkup:
    request_result = await list_pzu_in_direction(direction)
    request_result.sort()
    buttons = [
        InlineKeyboardButton(text=pzu, callback_data=pzu) for pzu in request_result
    ]
    directions_keyboard = InlineKeyboardBuilder()
    if direction == "–ó–∞–≤–æ–¥—ã –ß–ú":
        directions_keyboard.row(*buttons, width=2)
    else:
        directions_keyboard.row(*buttons, width=3)
    return directions_keyboard.as_markup()


# –ò–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—É–º–º—ã –¥–æ–Ω–∞—Ç–∞
def donat_amount_keyboard():
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="100 —Ä—É–±", callback_data="amount_100"),
                InlineKeyboardButton(text="200 —Ä—É–±", callback_data="amount_200"),
            ],
            [
                InlineKeyboardButton(text="500 —Ä—É–±", callback_data="amount_500"),
                InlineKeyboardButton(text="1000 —Ä—É–±", callback_data="amount_1000"),
            ],
            [
                InlineKeyboardButton(
                    text="–î—Ä—É–≥–∞—è —Å—É–º–º–∞", callback_data="custom_amount"
                ),
            ],
        ]
    )


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ
def transition_to_payment_keyboard(url: str):
    return InlineKeyboardMarkup(
        inline_keyboard=[[InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ", url=url)]]
    )


# –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –≤ –æ–¥–Ω—É
combined_kb = create_kb_for_contacts()
# –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–û–î–î–ï–†–ñ–ê–¢–¨"
combined_kb.inline_keyboard.insert(
    0, [InlineKeyboardButton(text="–ü–û–î–î–ï–†–ñ–ê–¢–¨", callback_data="/donate")]
)
