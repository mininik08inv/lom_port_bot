import os
import requests
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.types import ContentType
from aiogram import F
from aiogram.filters import ChatMemberUpdatedFilter, KICKED
from aiogram.types import ChatMemberUpdated
from database.db import get_db_connection

import logging.config
from loggs.logging_setting import logging_config

load_dotenv()
logging.config.dictConfig(logging_config)
logger = logging.getLogger('bot')

# BOT_TOKEN = os.environ.get('TELEGRAM_TOKEN')
BOT_TOKEN = os.environ.get('COURSE_TEST_BOT_TOKEN')

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp: Dispatcher
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


def generating_a_reply_message(point):
    # url = f'https://yandex.ru/navi?whatshere%5Bpoint%5D={point[4]}%2C{point[3]}&whatshere%5Bzoom%5D=12'
    url = f'https://yandex.ru/navi?whatshere%5Bpoint%5D={point[4]}%2C{point[3]}&whatshere%5Bzoom%5D=16.768925&ll={point[4]}%2C{point[3]}&z=16.768925&si=e5wmhgefmj352468jpym3ewa4m'
    weather = requests.get(
        f"https://api.open-meteo.com/v1/forecast?latitude={point[3]}&longitude={point[4]}&current=temperature_2m,wind_speed_10m&hourly=temperature_2m,relative_humidity_2m,wind_speed_10m")

    reply_message = f'''–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–π –ø—É–Ω–∫—Ç: {point[2]}
                 \n–ê–¥—Ä–µ—Å: {point[1]}
                 \n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: {url}
                 \n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {point[-2]}
                 \n–ü–æ–≥–æ–¥–∞ –≤ —Ä–∞–π–æ–Ω–µ –ø–æ–≥—Ä—É–∑–∫–∏üòÑ: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–∑–¥—É—Ö–∞ : {weather.json()['current']['temperature_2m']}'''

    return reply_message


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/start"
async def process_start_command(message: Message):
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id}, user_name: {message.from_user.username} - –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞')
    await message.answer('–ü—Ä–∏–≤–µ—Ç!\n–ú–µ–Ω—è –∑–æ–≤—É—Ç LomPortBot!\n–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º —Å –ø–æ–∏—Å–∫–æ–º –ü–ó–£\n')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/help"
async def process_help_command(message: Message):
    await message.answer(
        f'''–ù–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω—É–∂–Ω–æ–≥–æ –ü–ó–£ \n–Ø –ø—Ä–∏—à–ª—é —Ç–µ–±–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å –≤ –º–æ–µ–π –±–∞–∑–µ!\n –§–æ—Ä–º–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ç–∞–∫–∏–º: –≤–ø1, –í–ü1, –í–ø1 –∏–ª–∏ –Ω–∞–ø—Ä–∏–º–µ—Ä –í–æ—Ä—Å–∏–Ω–æ. \n –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ü–ó–£ –∑–¥–µ—Å—å /list_pzu \n–ë—É–¥–µ—Ç –≤—Ä–µ–º—è –ø–æ—Å–µ—Ç–∏—Ç–µ –º–æ–π —Å–∞–π—Ç https://lomovoz-portal.ru/'''
    )


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –∫–æ–º–∞–Ω–¥—É "/list_pzu"
async def process_list_pzu_command(message: Message):
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_conn = get_db_connection()
        with db_conn.cursor() as cur:
            sql_query = f"select abbreviation from points_location"
            # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ –ë–î
            try:
                # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                cur.execute(sql_query)
                # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–∞ –∫–æ—Ä—Ç–µ–∂–µ–π
                res_data = cur.fetchall()
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –æ–¥–Ω–æ–º–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫
                reply_message = [i[0] for i in res_data]
                # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
                reply_message.sort()
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –≤ —Å—Ç—Ä–æ–∫—É —Å–æ —Å–∑–∞—á–µ–Ω–∏—è–º–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–º–∏ –∑–∞–ø—è—Ç–æ–π
                reply_message = ', '.join(reply_message)

            except:
                logger.exception('–ö–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /list_pzu')
                reply_message = f'–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —ç—Ç–æ–≥–æ –ü–ó–£ –Ω–µ—Ç –≤ –±–∞–∑–µ!\n –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∑–¥–µ—Å—å - /help'


    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        logger.exception('–ö–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ /list_pzu')

    finally:
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        if db_conn:
            db_conn.close()

    logger.info(
        f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id: {message.from_user.id}, user_name: {message.from_user.username}, fullname: {message.from_user.full_name}  –∑–∞–ø—Ä–æ—Å–∏–ª —Å–ø–∏—Å–æ–∫ –ü–ó–£')

    await message.answer(text=reply_message)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –±–æ—Ç—É —Ñ–æ—Ç–æ
async def if_the_photo(message: Message):
    logger.info(
        f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id: {message.from_user.id}, user_name: {message.from_user.username}, fullname: {message.from_user.full_name} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ')

    # await message.reply_photo(message.photo[0].file_id)
    await message.answer(f'–Ø –∫–æ–Ω–µ—á–Ω–æ –ª—é–±–ª—é –∫–∞—Ä—Ç–∏–∫–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –Ω–æ –Ω–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ!')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –±–æ—Ç—É —Å—Ç–∏–∫–µ—Ä–∞
async def if_the_sticker(message: Message):
    # await message.reply_photo(message.photo[0].file_id)
    await message.answer(f'–°—Ç–∏–∫–µ—Ä—ã üòè, —ç—Ç–æ –Ω–µ —Å–æ–≤—Å–µ–º —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ!')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –±–æ—Ç—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async def if_the_voice(message: Message):
    await message.answer(text='–í—ã –ø—Ä–∏—Å–ª–∞–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ê —è –ø–æ–∫–∞ —á—Ç–æ —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–ºüòî')


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ –≤–∞—à–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è,
# –∫—Ä–æ–º–µ –∫–æ–º–∞–Ω–¥ "/start" –∏ "/help"
async def send_point(message: Message):
    try:

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        db_conn = get_db_connection()
        with db_conn.cursor() as cur:
            sql_query = f"SELECT * FROM points_location WHERE abbreviation='{message.text.upper()}'"
            # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ –ë–î
            try:
                cur.execute(sql_query)
                # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–∞
                res_data = cur.fetchone()
                # –ü–µ—Ä–µ–¥–∞–µ–º  –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ—Ä—Ç–µ–∂ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø—É–µ
                reply_message = generating_a_reply_message(res_data)
            except:
                reply_message = f'–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–ª–∏ —ç—Ç–æ–≥–æ –ü–ó–£ –Ω–µ—Ç –≤ –±–∞–∑–µ!\n –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∑–¥–µ—Å—å - /help'


    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
        logger.exception('–ö–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞')

    finally:
        # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
        if db_conn:
            db_conn.close()
            logger.info(
                f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id:{message.from_user.id}, user_name: {message.from_user.username},fullname : {message.from_user.full_name}  –∑–∞–ø—Ä–æ—Å–∏–ª –ü–ó–£: "{message.text.upper()}"')
    await message.reply(text=reply_message)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
@dp.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=KICKED))
async def process_user_blocked_bot(event: ChatMemberUpdated):
    logger.warning(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {event.from_user.id}, user_name: {event.from_user.username} - –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞')


# –≠—Ç–æ—Ç —Ö–µ–¥—Ä–ª–µ—Ä –±—É–¥–µ—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –ª—é–±—ã–µ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã —Ç–∏–ø—ã –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ –∞–ø–¥–µ–π—Ç–µ
async def if_something_else(message: Message):
    await message.answer(f'–í–∏–¥–µ–æ, –ê—É–¥–∏–æ, –î–æ–∫—É–º–µ–Ω—Ç—ã, –ò–≥—Ä—ã –∏ —Ç.–¥ –º–µ–Ω—è –º–∞–ª–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Çüòè, —Ç–µ–∫—Å—Ç –∏ —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç!')


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã
dp.message.register(process_start_command, Command(commands='start'))
dp.message.register(process_help_command, Command(commands='help'))
dp.message.register(process_list_pzu_command, Command(commands='list_pzu'))
dp.message.register(if_the_photo, F.content_type == ContentType.PHOTO)
dp.message.register(if_the_sticker, F.content_type == ContentType.STICKER)
dp.message.register(if_the_voice, F.content_type == ContentType.VOICE)
dp.message.register(if_something_else, F.content_type.in_({ContentType.VIDEO_NOTE,
                                                           ContentType.AUDIO,
                                                           ContentType.DOCUMENT,
                                                           ContentType.GAME,
                                                           ContentType.UNKNOWN,
                                                           ContentType.ANY
                                                           }))
dp.message.register(send_point)

if __name__ == '__main__':
    dp.run_polling(bot)
