"""
–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã –ü–ó–£
–≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
"""

from aiogram.types import Message
from aiogram import Router

# –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–µ—Å–æ–≤—ã–º –∫–æ–Ω—Ç—Ä–æ–ª–µ–º
from app.handlers.weight_control_handlers import add_weight_control_check_to_pzu_response

import logging

logger = logging.getLogger("lomportbot.pzu_integration")

router = Router()


# –ü–†–ò–ú–ï–† 1: –ú–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ö–µ–Ω–¥–ª–µ—Ä–∞ –ü–ó–£
async def handle_pzu_request_with_weight_control(message: Message, pzu_data: dict):
    """
    –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –ü–ó–£ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
    
    –≠—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã
    """
    
    # ===== –°–£–©–ï–°–¢–í–£–Æ–©–ê–Ø –õ–û–ì–ò–ö–ê –ë–û–¢–ê =====
    # –ó–¥–µ—Å—å –±—ã–ª –±—ã –≤–∞—à –æ–±—ã—á–Ω—ã–π –∫–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ü–ó–£
    original_pzu_text = f"""
üìç –ü–ó–£: {pzu_data.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}
üó∫Ô∏è –†–µ–≥–∏–æ–Ω: {pzu_data.get('region', '–ù–µ —É–∫–∞–∑–∞–Ω')}
üìß –ö–æ–Ω—Ç–∞–∫—Ç—ã: {pzu_data.get('contacts', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')}
üïí –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: {pzu_data.get('working_hours', '–ù–µ —É–∫–∞–∑–∞–Ω')}
"""
    
    # ===== –ù–û–í–´–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ: –ü–†–û–í–ï–†–ö–ê –í–ï–°–û–í–û–ì–û –ö–û–ù–¢–†–û–õ–Ø =====
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
        updated_text, weight_control_keyboard = await add_weight_control_check_to_pzu_response(
            pzu_data, original_pzu_text
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
        if weight_control_keyboard:
            # –ï—Å—Ç—å –ø—É–Ω–∫—Ç—ã –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Ä—è–¥–æ–º - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
            await message.answer(
                updated_text,
                reply_markup=weight_control_keyboard,
                parse_mode="Markdown"
            )
        else:
            # –í–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è —Ä—è–¥–æ–º –Ω–µ—Ç - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç
            await message.answer(original_pzu_text)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏
        await message.answer(original_pzu_text)


# –ü–†–ò–ú–ï–† 2: –ü—Ä–æ—Å—Ç–∞—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ö–µ–Ω–¥–ª–µ—Ä–∞
"""
–í –≤–∞—à–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º —Ñ–∞–π–ª–µ app/handlers/commands.py –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:

# –í –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –¥–æ–±–∞–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç:
from app.handlers.weight_control_handlers import add_weight_control_check_to_pzu_response

# –í —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ü–ó–£ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ —Ä–∞–π–æ–Ω–µ —Å—Ç—Ä–æ–∫–∏ –≥–¥–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –æ—Ç–≤–µ—Ç) –¥–æ–±–∞–≤–∏—Ç—å:

# –î–û (—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥):
await message.answer(pzu_response_text, reply_markup=existing_keyboard)

# –ü–û–°–õ–ï (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è):
if pzu_data.get('latitude') and pzu_data.get('longitude'):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Å–æ–≤–æ–π –∫–æ–Ω—Ç—Ä–æ–ª—å
    updated_text, weight_keyboard = await add_weight_control_check_to_pzu_response(
        pzu_data, pzu_response_text
    )
    
    if weight_keyboard:
        # –ï—Å—Ç—å –≤–µ—Å–æ–≤–æ–π –∫–æ–Ω—Ç—Ä–æ–ª—å - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º
        await message.answer(updated_text, reply_markup=weight_keyboard, parse_mode="Markdown")
    else:
        # –ù–µ—Ç –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è - –æ–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç
        await message.answer(pzu_response_text, reply_markup=existing_keyboard)
else:
    # –ù–µ—Ç –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ü–ó–£ - –æ–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç
    await message.answer(pzu_response_text, reply_markup=existing_keyboard)
"""


# –ü–†–ò–ú–ï–† 3: –°–æ–∑–¥–∞–Ω–∏–µ middleware –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
class WeightControlMiddleware:
    """
    Middleware –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
    –ú–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω –∫–æ –≤—Å–µ–º —Ö–µ–Ω–¥–ª–µ—Ä–∞–º –ü–ó–£
    """
    
    async def __call__(self, handler, event, data):
        # –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ö–µ–Ω–¥–ª–µ—Ä
        result = await handler(event, data)
        
        # –ï—Å–ª–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ü–ó–£ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
        pzu_data = data.get('pzu_data')
        if pzu_data and pzu_data.get('latitude') and pzu_data.get('longitude'):
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
            pass
        
        return result


# –ü–†–ò–ú–ï–† 4: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–æ—É—Ç–µ—Ä
def register_weight_control_handlers(router: Router):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ö–µ–Ω–¥–ª–µ—Ä–æ–≤ –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º —Ä–æ—É—Ç–µ—Ä–µ
    
    –î–æ–±–∞–≤—å—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É –≤ –≤–∞—à –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª —Å —Ä–æ—É—Ç–µ—Ä–∞–º–∏:
    register_weight_control_handlers(your_router)
    """
    from app.handlers.weight_control_handlers import router as weight_control_router
    
    # –í–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è
    router.include_router(weight_control_router)


# –ü–†–ò–ú–ï–† 5: –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
async def quick_weight_control_check(lat: float, lon: float, name: str = "—Ç–æ—á–∫–∞") -> str:
    """
    –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–ª—è –ª—é–±—ã—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    from app.services.weight_control_service import WeightControlService
    from app.utils.map_utils import generate_weight_control_warning
    
    try:
        weight_controls = await WeightControlService.find_nearby_weight_control(
            lat, lon, radius_km=50
        )
        
        if weight_controls:
            warning = generate_weight_control_warning(weight_controls)
            return f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è {name}:\n\n{warning}"
        else:
            return f"‚úÖ –†—è–¥–æ–º —Å {name} –ø—É–Ω–∫—Ç–æ–≤ –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ"
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤–µ—Å–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–ª—è {name}"
